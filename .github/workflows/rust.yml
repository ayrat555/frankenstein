name: Test and Build Rust

on:
  push:
  pull_request:
  schedule:
    # Check if it works with current dependencies (weekly on Wednesday 2:32 UTC)
    - cron: '32 2 * * 3'

jobs:
  test:
    name: Test ${{ matrix.os }} ${{ matrix.toolchain }} ${{ matrix.features }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
        clippyargs:
          - -D clippy::pedantic -D warnings
        features:
          - --no-default-features
          - --all-features
        include:
          # Check future versions and maybe get some glances on soon to be lints
          - os: ubuntu-latest
            toolchain: beta
            clippyargs: -W clippy::pedantic -W clippy::cargo
            features: --all-features
          - os: ubuntu-latest
            toolchain: nightly
            clippyargs: -W clippy::pedantic
            features: --all-features

          # Check the minimum supported Rust version (MSRV).
          # Sometimes old rust versions don't yet have the lints (allow unknown) or don't have fixes in lints (false positives -> don't error, just warn).
          - os: ubuntu-latest
            toolchain: 1.54.0
            clippyargs: -A unknown-lints
            features: --all-features
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          components: clippy
          override: true
          profile: minimal
          toolchain: ${{ matrix.toolchain }}

      - name: Check clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose --all-targets ${{ matrix.features }} -- ${{ matrix.clippyargs }}

      - name: Check docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --verbose --no-deps ${{ matrix.features }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose ${{ matrix.features }}

  release:
    name: Release ${{ matrix.triple }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            triple: arm-unknown-linux-gnueabihf
          - os: ubuntu-latest
            triple: armv7-unknown-linux-gnueabihf
          - os: ubuntu-latest
            triple: aarch64-unknown-linux-gnu

          - os: macos-11
            triple: x86_64-apple-darwin
          - os: macos-11
            triple: aarch64-apple-darwin

          - os: windows-latest
            triple: x86_64-pc-windows-msvc
          # https://github.com/briansmith/ring/issues/1167
          # - os: windows-latest
          #   triple: aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          target: ${{ matrix.triple }}
          toolchain: stable

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose --all-features --target ${{ matrix.triple }}
          use-cross: ${{ runner.os == 'Linux' && matrix.triple != 'x86_64-unknown-linux-gnu' }}
